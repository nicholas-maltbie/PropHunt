name: Build Development

on: 
  pull_request: {}

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildForSomePlatforms:
    name: Build ${{ matrix.buildType }} for ${{ matrix.platform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ""
        unityVersion:
          - 2020.1.5f1
        platform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
        buildType:
          - Client
          - Server
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: false

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Cache Library Folder
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.platform }}-${{ hashFiles('Packages/manifest.json') }}-v.1.0
          restore-keys: |
            Library-${{ matrix.platform }}-

      - name: Cache git lfs
        uses: actions/cache@v2
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1.2
          # use previous cache if current one is not found
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Pull lfs data, if not cached
        run: git lfs pull

      - uses: webbertakken/unity-builder@v1.2
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.platform }}
          buildMethod: EditorNamespace.Builder.BuildProject
          customParameters: -buildType ${{ matrix.buildType }} -development

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}-${{ matrix.buildType }}
          path: build
